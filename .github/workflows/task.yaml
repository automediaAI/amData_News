name: the task runner

on:
  push:
  workflow_dispatch:
  schedule:
    - cron:  '00 03 * * *'
    - cron:  '00 06 * * *'
    - cron:  '00 11 * * *'
    - cron:  '00 16 * * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt -f https://download.pytorch.org/whl/torch_stable.html; fi
    
    # - name: Run the facebook task
    #   run: |
    #     python transformers_facebook_playground.py
    # - name: Run the sshleifer task
    #   run: |
    #     python transformers_sshleifer_playground.py
    
    # - name: Run the ChatGPT task for testing
    #   env:
    #         BING_SEARCH_V7_SUBSCRIPTION_KEY: ${{ secrets.BING_SEARCH_V7_SUBSCRIPTION_KEY }}
    #         PRIVATE_API_KEY_NEWSAPI: ${{ secrets.PRIVATE_API_KEY_NEWSAPI }}
    #         PRIVATE_REDDIT_CLIENTID: ${{ secrets.PRIVATE_REDDIT_CLIENTID }}
    #         PRIVATE_REDDIT_SECRET: ${{ secrets.PRIVATE_REDDIT_SECRET }}
    #         MERCURY_POST_ENDPOINT: ${{ secrets.MERCURY_POST_ENDPOINT }}
    #         MERCURY_GET_ENDPOINT: ${{ secrets.MERCURY_GET_ENDPOINT }}
    #         PRIVATE_BASE_KEY: ${{ secrets.PRIVATE_BASE_KEY }}
    #         PRIVATE_TABLE_NAME_NEWSPAYLOAD: ${{ secrets.PRIVATE_TABLE_NAME_NEWSPAYLOAD }}
    #         PRIVATE_TABLE_NAME_SERVICEDUMP: ${{ secrets.PRIVATE_TABLE_NAME_SERVICEDUMP }}
    #         PRIVATE_API_KEY_AIRTABLE: ${{ secrets.PRIVATE_API_KEY_AIRTABLE }}
    #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #         CHATGPT_API_KEY: ${{ secrets.CHATGPT_API_KEY }}
    #   run: |
    #     python amService_ChatGPT.py

    # - name: Run the overall task
    #   env:
    #       BING_SEARCH_V7_SUBSCRIPTION_KEY: ${{ secrets.BING_SEARCH_V7_SUBSCRIPTION_KEY }}
    #       PRIVATE_API_KEY_NEWSAPI: ${{ secrets.PRIVATE_API_KEY_NEWSAPI }}
    #       PRIVATE_REDDIT_CLIENTID: ${{ secrets.PRIVATE_REDDIT_CLIENTID }}
    #       PRIVATE_REDDIT_SECRET: ${{ secrets.PRIVATE_REDDIT_SECRET }}
    #       MERCURY_POST_ENDPOINT: ${{ secrets.MERCURY_POST_ENDPOINT }}
    #       MERCURY_GET_ENDPOINT: ${{ secrets.MERCURY_GET_ENDPOINT }}
    #       PRIVATE_BASE_KEY: ${{ secrets.PRIVATE_BASE_KEY }}
    #       PRIVATE_TABLE_NAME_NEWSPAYLOAD: ${{ secrets.PRIVATE_TABLE_NAME_NEWSPAYLOAD }}
    #       PRIVATE_TABLE_NAME_SERVICEDUMP: ${{ secrets.PRIVATE_TABLE_NAME_SERVICEDUMP }}
    #       PRIVATE_API_KEY_AIRTABLE: ${{ secrets.PRIVATE_API_KEY_AIRTABLE }}
    #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #       CHATGPT_API_KEY: ${{ secrets.CHATGPT_API_KEY }}
    #   run: |
    #     python task.py

    - uses: "finnp/create-file-action@master"
      env:
        FILE_NAME: "NewsPull.json"
        FILE_DATA: "TESTING"

    - name: NewsPull Artifact
      uses: actions/upload-artifact@v3
        with:
          name: ssml-result
          path: NewsPull.json

    # - name: Release
    #   uses: softprops/action-gh-release@v1
    #   with:
    #     files: "NewsPull.json"
    #     token: ${{ secrets.AMDATA_NEWS_RELEASE_TOKEN }}

    - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            NewsPull.json

    - uses: gautamkrishnar/keepalive-workflow@master 
